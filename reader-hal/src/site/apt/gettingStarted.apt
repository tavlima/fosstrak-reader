       ------
                                    Reader HAL Module
                                    ------
                                    ------


Reader HAL Module: Getting Started


   The Reader HAL Module cannot be used by itself. Its use is currently envisioned together with the Reader RP/RM Core. The RP/RM Core provides all of the filtering, aggregation, messaging, and configuration capabilities specified in the EPCglobal RP and RM specifications. To carry out the actual commands on a physical device or a simulator, the Reader RP/RM Core uses the interface and implementation provided by the reader HAL module.




* How to use the reader hal module

    * Include as a dependency (by default, it is configured as a dependency in the reader-rprm-core already)

    * Use the appropriate configuration files to configure the reader device (or the reader simulator) (The jar includes a number of example config files for the simulator: SimulatorController.xml and GraphicSimulator.xml).

    The path to these configuration files must be given in the ReaderDevice.xml file of the RP/RM Core. It is important that the entries in the controller configuration file agree with the settings in the ReaderDevice.xml file of the RP/RM Core.



* How to configure the Simulator

   The simulator framework (i.e. the SimulatorController implementation) has a properties file
   ({{{example/SimulatorController.xml} SimulatorController.xml}}) as shown below.
   The property simType has to be set to the fully qualified name of the simulator class. In the
   current release the GraphicSimulator and the BatchSimulator is supported. The property numberOfReadPoints specifies
   the number of read points (i.e. antennas) of the simulator. The read point names are set using the
   properties readPoint_n, with n as the read point number.

+---

<?xml version="1.0" encoding="UTF-8"?>
<properties>

   <!-- SimulatorType to be loaded dynamically -->
   <!-- currently only org.accada.reader.hal.impl.sim.GraphicSimulator is supported -->
   <simType>org.accada.reader.hal.impl.sim.GraphicSimulator</simType>
   <!-- <simType>org.accada.reader.hal.impl.sim.BatchSimulator</simType> -->
   <!-- <simType>org.accada.reader.hal.impl.sim.CmdLineSim</simType> -->
   <!-- <simType>org.accada.reader.hal.impl.sim.SimulatorClient</simType> -->
   <simTypePropFile>/props/GraphicSimulator.xml</simTypePropFile>
   <simTypeDefaultPropFile>/props/GraphicSimulator_default.xml</simTypeDefaultPropFile>

   <!-- Read point definition -->
   <numberOfReadPoints>4</numberOfReadPoints>
   <!-- readpoints numebred readPoint_1 ... readPoint_n (at the moment) -->
   <!-- the client has to use these names to address this read points -->
   <!-- example: <readPoint_1>Antenna1</readPoint_1> -->
   <readPoint_1>Shelf1</readPoint_1>
   <readPoint_2>Shelf2</readPoint_2>
   <readPoint_3>Shelf3</readPoint_3>
   <readPoint_4>Shelf4</readPoint_4>

</properties>

+---

   The concrete simulator implementation (in our case the GraphicSimulator) itself has a property file to set specific parameters.
   The name of the property file for the GraphicSimulator can be given in the SimulatorController.xml and is GraphicSimulator.xml
   ({{{example/GraphicSimulator.xml} GraphicSimulator.xml}}) in our case as shown below.
   The layout, text and images of the GraphicSimulator can be adjusted by the different properties.
   The property Language is used to load the texts of the GUI components. The filename is constructed
   by adding the value of the Language property to GUIText_ and appending .xml (in our case
   GUIText_en.xml). The other properties set the image, fonts and dimensions of the GUI components
   of the GraphicSimulator.

+---

<?xml version="1.0" encoding="UTF-8"?>
<properties>

   <!-- language -->
   <Language>en</Language>

   <!-- rfid reader -->
   <ReaderImage>/images/rfid-reader.png</ReaderImage>
   <ReaderDefaultImage>/images/rfid-reader_default.png</ReaderDefaultImage>
   <ReaderWidth>141</ReaderWidth>
   <ReaderHeight>100</ReaderHeight>
   <ReaderLabelSize>10</ReaderLabelSize>
   <ReaderLabelFont>Verdana</ReaderLabelFont>
   <InterReaderPadding>200</InterReaderPadding>

   <!-- rfid antenna -->
   <AntennasPerRow>4</AntennasPerRow>
   <AntennaImage>/images/rfid-antenna_0.png</AntennaImage>
   <!-- <AntennaImage>/images/rfid-antenna_1.png</AntennaImage> -->
   <!-- <AntennaImage>/images/rfid-antenna_2.png</AntennaImage> -->
   <AntennaDefaultImage>/images/rfid-antenna_default.png</AntennaDefaultImage>
   <AntennaLabelFont>Verdana</AntennaLabelFont>
   <AntennaLabelSize>10</AntennaLabelSize>
   <AntennaWidth>100</AntennaWidth>
   <AntennaHeight>110</AntennaHeight>
   <HorizontalInterAntennaPadding>120</HorizontalInterAntennaPadding>
   <VerticalInterAntennaPadding>60</VerticalInterAntennaPadding>

   <!-- rfid tag -->
   <TagImage>/images/rfid-tag.png</TagImage>
   <TagDefaultImage>/images/rfid-tag_default.png</TagDefaultImage>
   <TagLabelFont>Verdana</TagLabelFont>
   <TagLabelSize>10</TagLabelSize>
   <TagWidth>100</TagWidth>
   <TagHeight>20</TagHeight>
   <InterTagPadding>10</InterTagPadding>
   <!-- <TagPrefix>A1B4F537D3</TagPrefix> -->
   <TagPrefix>9204F0004B0</TagPrefix>

   <!-- paddings -->
   <FramePadding>50</FramePadding>
   <HorizontalPadding>50</HorizontalPadding>
   <VerticalPadding>50</VerticalPadding>

   <!-- window -->
   <MinimumWindowWidth>800</MinimumWindowWidth>
   <MinimumWindowHeight>400</MinimumWindowHeight>

   <!-- dialog windows -->
   <DialogWindowWidth>800</DialogWindowWidth>
   <DialogWindowHeight>120</DialogWindowHeight>

</properties>

+---
